version: '3'

services:

  nginx:
    image: nginx
    container_name: main_nginx
    environment:
      - DOMAIN=${DOMAIN}
      - REVERSE_PORT_1=${REVERSE_PORT_1}
    depends_on:
      - php
    volumes:
      - ./docker/config/nginx/main:/etc/nginx/conf.d
      - ./docker/logs/nginx/main:/var/log/nginx
    ports:
      - "80:80"
      # - "443:443"
    command: /bin/bash -c "envsubst \ 
      '$$DOMAIN $$REVERSE_PORT_1' \
      < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf \
      && exec nginx -g 'daemon off;'"

  nginx_reverse:
    image: nginx
    container_name: "${PREFIX}nginx"
    environment:
      - REVERSE_PORT_1=${REVERSE_PORT_1}
    depends_on:
      - php
    volumes:
      - ./docker/config/nginx/reverse:/etc/nginx/conf.d
      - ./docker/logs/nginx/reverse:/var/log/nginx
      - ./src:/var/www/html:ro
    ports:
      - ${REVERSE_PORT_1}
    command: /bin/bash -c "envsubst \
      '$$REVERSE_PORT_1' \
      < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf \
      && exec nginx -g 'daemon off;'"

  php: 
    container_name: "${PREFIX}php"
    build: 
      context: ./docker
      dockerfile: dockerfiles/php/Dockerfile
      args:
        - PHP_USER_ID
        - PHP_GROUP_ID
    user: ${PHP_USER_ID}:${PHP_GROUP_ID}
    environment:
      - DEBUG_PORT=${DEBUG_PORT}
      - DEBUG_REMOTE=${DEBUG_REMOTE}
    volumes:
      - ./src:/var/www/html
    ports:
      - "9000"
  
  postgres:
    image: postgres:14-alpine
    container_name: "${PREFIX}postgres"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: ${POSTGRES_DATA}
    volumes:
      - ./docker/data/database/pgdata:/var/lib/postgresql/data/pgdata
      - ./docker/data/database/dump:/etc/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"

  redis:
    image: redis:6.2-alpine
    container_name: "${PREFIX}redis"
    command: redis-server
    ports:
      - '6379'
    volumes:
      - ./docker/data/redis:/data

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: "${PREFIX}rabbitmq"
    restart: on-failure
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: test
      RABBITMQ_DEFAULT_PASS: test
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - ./docker/data/rabbitmq:/var/lib/rabbitmq/
      - ./docker/logs/rabbitmq:/var/log/rabbitmq/


    